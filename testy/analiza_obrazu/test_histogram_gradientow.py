import unittest
import sys
import numpy as np

# Konieczna zmiana folderu aby odnalezc modul w projekcie
sys.path.append('../../analiza_obrazu')
import histogram_gradientow


class TestHistogramGradientow(unittest.TestCase):
    def test_zamiana(self):
        tymczasowy = histogram_gradientow.CechyHOG('obrazy/jablko.jpg')
        wynik = tymczasowy.std()
        self.assertEqual(0.19743806519417686, wynik)
        tymczasowy.zmien_obraz('obrazy/czarny.png')
        wynik = tymczasowy.std()
        self.assertEqual(0.0, wynik)

    def test_std(self):
        tymczasowy = histogram_gradientow.CechyHOG('obrazy/czarny.png')
        wynik = tymczasowy.std()
        self.assertEqual(0, wynik)

    def test_srednia(self):
        wynik = histogram_gradientow.CechyHOG('obrazy/czarny.png').srednia()
        self.assertEqual(0, wynik)

    def test_wektor_cech(self):
        wynik = histogram_gradientow.CechyHOG('obrazy/jablko.jpg').wektor_cech()
        oczekiwana = np.array([0., 0., 0., 0., 0., 0., 0., 0., 0.5, 0., 0., 0.,
                               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.5, 0.,
                               0., 0.375, 0.375, 0., 0., 0.375, 0., 0., 0., 0., 0., 0.,
                               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                               0., 0., 0.375, 0.25, 0.125, 0.375, 0.5, 0.375, 0.375, 0., 0.375, 0.375,
                               0., 0., 0.5, 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                               0., 0.125, 0.5, 0.375, 0., 0.25, 0.25, 0.25, 0.125, 0.125, 0.25, 0.375,
                               0.5, 0.5, 0.5, 0., 0., 0.5, 0., 0., 0., 0., 0., 0.5,
                               0., 0., 0., 0., 0., 0., 0., 0.25, 0.25, 0., 0., 0.,
                               0., 0., 0.25, 0., 0.125, 0.5, 0.5, 0.5, 0., 0., 0., 0.,
                               0., 0., 0., 0.5, 0.5, 0.5, 0., 0., 0.125, 0.125, 0., 0.,
                               0., 0., 0., 0., 0., 0.125, 0., 0., 0., 0.125, 0.5, 0.625,
                               0.375, 0., 0., 0., 0., 0., 0.5, 0.5, 0.5, 0., 0.125, 0.,
                               0., 0., 0.125, 0., 0., 0., 0.125, 0., 0., 0., 0., 0.125,
                               0., 0.25, 0.5, 0.625, 0., 0., 0., 0., 0., 0., 0., 0.,
                               0., 0.125, 0., 0.125, 0., 0., 0.125, 0., 0., 0., 0., 0.,
                               0., 0., 0., 0.375, 0.125, 0., 0.625, 0.75, 0., 0.5, 0., 0.,
                               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                               0., 0., 0., 0.125, 0., 0., 0., 0., 0., 0.625, 0.625, 0.75,
                               0., 0., 0., 0., 0., 0., 0., 0., 0.625, 0.5, 0., 0.,
                               0., 0., 0., 0.375, 0., 0., 0.125, 0., 0., 0., 0., 0.,
                               0.125, 0.5, 0.75, 0., 0., 0., 0., 0., 0., 0., 0., 0.5,
                               0.5, 0.5, 0., 0., 0.125, 0., 0., 0.125, 0.125, 0., 0., 0.,
                               0., 0., 0.125, 0., 0., 0.75, 0., 0., 0., 0., 0., 0.,
                               0., 0., 0.125, 0., 0., 0., 0., 0., 0., 0., 0., 0.125,
                               0., 0.125, 0., 0., 0., 0., 0., 0., 0.875, 0.875, 0., 0.,
                               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.25, 0.,
                               0., 0., 0.125, 0., 0.125, 0., 0., 0., 0., 0., 0., 0.,
                               0., 0., 0., 0., 0., 0., 0., 0.375, 0.25, 0.125, 0.25, 0.,
                               0., 0., 0.25, 0.25, 0.25, 0., 0., 0., 0., 0., 0., 0.,
                               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                               0.125, 0.125, 0., 0., 0.125, 0.125, 0.125, 0.25, 0., 0., 0.125, 0.,
                               0.25, 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                               0.5, 0., 0.125, 0., 0., 0.125, 0.125, 0., 0.25, 0., 0., 0.125,
                               0.125, 0., 0., 0.5, 0.125, 0.125, 0., 0., 0., 0., 0., 0.,
                               0., 0., 0., 0.75, 0., 0., 0.125, 0., 0., 0., 0., 0.,
                               0.125, 0.375, 0.125, 0.125, 0., 0.125, 0., 0.125, 0., 0., 0., 0.,
                               0., 0., 0., 0., 0., 0., 0.75, 0., 0., 0., 0., 0.,
                               0., 0., 0., 0., 0., 0., 0.375, 0., 0., 0., 0., 0.,
                               0., 0., 0., 0., 0., 0., 0., 0.75, 0.25, 0.875, 0.75, 0.,
                               0., 0.125, 0., 0., 0., 0., 0., 0.25, 0., 0., 0., 0.,
                               0., 0.25, 0., 0., 0.125, 0., 0., 0., 0., 0., 0., 0.,
                               0., 0.625, 0.5, 0.5, 0., 0.375, 0., 0.125, 0.5, 0., 0., 0.,
                               0., 0., 0.125, 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                               0., 0., 0., 0., 0.125, 0.625, 0.625, 0., 0.125, 0., 0., 0.5,
                               0.375, 0.375, 0., 0., 0., 0., 0.25, 0.125, 0.125, 0.125, 0.5, 0.5,
                               0.5, 0., 0., 0.5, 0., 0., 0., 0.125, 0.375, 0.625, 0.625, 0.,
                               0.375, 0.125, 0.5, 0.5, 0.125, 0.25, 0.25, 0.25, 0.25, 0.125, 0.125, 0.125,
                               0.375, 0.5, 0.5, 0.5, 0.5, 0., 0., 0., 0., 0.125, 0.25, 0.375,
                               0.25, 0.25, 0.375, 0.5, 0.375, 0.375, 0.25, 0.25, 0.125, 0.25, 0.25, 0.25,
                               0.125, 0.375, 0.5, 0.5, 0.5, 0.5, 0., 0.125, 0., 0.5, 0., 0.,
                               0., 0.5, 0.375, 0.5, 0.5, 0.5, 0.5, 0.5, 0.375, 0.375, 0.375, 0.375,
                               0.125, 0.125, 0.5, 0.5, 0.5, 0.375, 0.375, 0.375, 0.25, 0.125, 0., 0.5, ])

        # Troche brzydki warunek, komunikat o nieudanym tescie malo mowi
        self.assertEqual((oczekiwana - wynik).any() != 0, False)
        wynik2 = histogram_gradientow.CechyHOG('obrazy/czarny.png').wektor_cech()
        self.assertEqual(wynik2.any() != 0, False)


if __name__ == '__main__':
    unittest.main()
